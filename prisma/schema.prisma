generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(100)
  description String?
  parent_id   String?   @db.Uuid
  is_active   Boolean?  @default(true)
  store_id    String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([parent_id], map: "idx_categories_parent_id")
  @@index([store_id], map: "idx_categories_store_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_product_preferences {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  preference  String    @db.VarChar(50)
  notes       String?
  customer_id String    @db.Uuid
  product_id  String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([customer_id, product_id])
  @@unique([customer_id, product_id], map: "customer_product_preferences_customer_product_unique")
  @@index([customer_id], map: "idx_customer_product_preferences_customer_id")
  @@index([product_id], map: "idx_customer_product_preferences_product_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customers {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @db.VarChar(255)
  email          String?          @db.VarChar(255)
  phone          String           @db.VarChar(20)
  address        String?
  city           String?          @db.VarChar(100)
  state          String?          @db.VarChar(100)
  pincode        String?          @db.VarChar(10)
  date_of_birth  DateTime?        @db.Date
  gender         gender_type?
  occupation     String?          @db.VarChar(100)
  income_range   String?          @db.VarChar(50)
  social_circle  String?
  occasions      String[]
  budget_range   String?          @db.VarChar(50)
  notes          String?
  status         customer_status? @default(ACTIVE)
  store_id       String           @db.Uuid
  floor_id       String?          @db.Uuid
  assigned_to_id String?          @db.Uuid
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?        @default(now()) @db.Timestamptz(6)

  @@index([assigned_to_id], map: "idx_customers_assigned_to_id")
  @@index([email], map: "idx_customers_email")
  @@index([phone], map: "idx_customers_phone")
  @@index([store_id], map: "idx_customers_store_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model floors {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(100)
  number      Int
  description String?
  is_active   Boolean?  @default(true)
  store_id    String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([store_id, number])
  @@index([store_id], map: "idx_floors_store_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model follow_ups {
  id             String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  scheduled_date DateTime          @db.Timestamptz(6)
  type           follow_up_type
  description    String
  status         follow_up_status? @default(PENDING)
  completed_at   DateTime?         @db.Timestamptz(6)
  notes          String?
  customer_id    String            @db.Uuid
  created_at     DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?         @default(now()) @db.Timestamptz(6)

  @@index([customer_id], map: "idx_follow_ups_customer_id")
  @@index([scheduled_date], map: "idx_follow_ups_scheduled_date")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model interactions {
  id          String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type        interaction_type
  description String
  outcome     String?
  next_action String?
  customer_id String           @db.Uuid
  user_id     String           @db.Uuid
  created_at  DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?        @default(now()) @db.Timestamptz(6)

  @@index([customer_id], map: "idx_interactions_customer_id")
  @@index([user_id], map: "idx_interactions_user_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model products {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String    @db.VarChar(255)
  sku            String    @unique @db.VarChar(100)
  description    String?
  price          Decimal   @db.Decimal(10, 2)
  cost_price     Decimal?  @db.Decimal(10, 2)
  weight         Decimal?  @db.Decimal(8, 3)
  material       String?   @db.VarChar(100)
  gemstone       String?   @db.VarChar(100)
  purity         String?   @db.VarChar(20)
  images         String[]
  specifications Json?
  is_active      Boolean?  @default(true)
  store_id       String    @db.Uuid
  category_id    String    @db.Uuid
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([category_id], map: "idx_products_category_id")
  @@index([sku], map: "idx_products_sku")
  @@index([store_id], map: "idx_products_store_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sales {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount         Decimal      @db.Decimal(10, 2)
  quantity       Int?         @default(1)
  discount       Decimal?     @db.Decimal(10, 2)
  total_amount   Decimal      @db.Decimal(10, 2)
  payment_method String?      @db.VarChar(50)
  status         sale_status? @default(COMPLETED)
  notes          String?
  store_id       String       @db.Uuid
  floor_id       String       @db.Uuid
  customer_id    String       @db.Uuid
  product_id     String       @db.Uuid
  user_id        String       @db.Uuid
  created_at     DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?    @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_sales_created_at")
  @@index([customer_id], map: "idx_sales_customer_id")
  @@index([store_id], map: "idx_sales_store_id")
}

model sessions {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_token String    @unique @db.VarChar
  user_id       String    @db.Uuid
  expires       DateTime  @db.Timestamptz(6)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model stores {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  address     String
  city        String    @db.VarChar(100)
  state       String    @db.VarChar(100)
  pincode     String    @db.VarChar(10)
  phone       String    @db.VarChar(20)
  email       String    @unique @db.VarChar(255)
  website     String?   @db.VarChar(255)
  description String?
  logo        String?
  is_active   Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id             String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String?    @db.VarChar(255)
  email          String     @unique @db.VarChar(255)
  email_verified DateTime?  @db.Timestamptz(6)
  image          String?
  password       String?    @db.VarChar(255)
  role           user_role? @default(FLOOR_MANAGER)
  is_active      Boolean?   @default(true)
  store_id       String?    @db.Uuid
  floor_id       String?    @db.Uuid
  created_at     DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?  @default(now()) @db.Timestamptz(6)

  @@index([email], map: "idx_users_email")
  @@index([store_id], map: "idx_users_store_id")
}

model verification_tokens {
  identifier String    @db.VarChar
  token      String    @unique @db.VarChar
  expires    DateTime  @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([identifier, token])
}

enum UserRole {
  BUSINESS_ADMIN
  FLOOR_MANAGER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
  PROSPECT
  CONVERTED
}

enum InteractionType {
  WALK_IN
  PHONE_CALL
  EMAIL
  FOLLOW_UP
  SALE
  COMPLAINT
  INQUIRY
}

enum FollowUpType {
  PHONE_CALL
  EMAIL
  SMS
  VISIT
  DEMO
}

enum FollowUpStatus {
  PENDING
  COMPLETED
  CANCELLED
  RESCHEDULED
}

enum SaleStatus {
  PENDING
  COMPLETED
  CANCELLED
  REFUNDED
}
enum customer_status {
  ACTIVE
  INACTIVE
  PROSPECT
  CONVERTED
}

enum follow_up_status {
  PENDING
  COMPLETED
  CANCELLED
  RESCHEDULED
}

enum follow_up_type {
  PHONE_CALL
  EMAIL
  SMS
  VISIT
  DEMO
}

enum gender_type {
  MALE
  FEMALE
  OTHER
}

enum interaction_type {
  WALK_IN
  PHONE_CALL
  EMAIL
  FOLLOW_UP
  SALE
  COMPLAINT
  INQUIRY
}

enum sale_status {
  PENDING
  COMPLETED
  CANCELLED
  REFUNDED
}

enum user_role {
  BUSINESS_ADMIN
  FLOOR_MANAGER
}

